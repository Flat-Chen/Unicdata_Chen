import re
import time

import scrapy


class YicheDealerSpider(scrapy.Spider):
    name = 'yiche_dealer'
    allowed_domains = ['bitauto.com']

    # start_urls = ['https://dealer.bitauto.com/shanghai/']

    @classmethod
    def update_settings(cls, settings):
        settings.setdict(
            getattr(cls, 'custom_debug_settings' if getattr(cls, 'is_debug', False) else 'custom_settings', None) or {},
            priority='spider')

    def __init__(self, **kwargs):
        super(YicheDealerSpider, self).__init__(**kwargs)
        self.counts = 0
        self.province_item = {'北京市': 'beijing',
                              '天津市': 'tianjin',
                              '河北': 'hebei',
                              '山西': 'shanxi',
                              '内蒙古': 'neimenggu',
                              '辽宁': 'liaoning',
                              '吉林': 'jl',
                              '黑龙江': 'heilongjiang',
                              '上海市': 'shanghai',
                              '江苏': 'jiangsu',
                              '浙江': 'zhejiang',
                              '安徽': 'anhui',
                              '福建': 'fujian',
                              '江西': 'jiangxi',
                              '山东': 'shandong',
                              '河南': 'henan',
                              '湖北': 'hubei',
                              '湖南': 'hunan',
                              '广东': 'guangdong',
                              '广西': 'guangxi',
                              '海南': 'hainan',
                              '重庆市': 'chongqing',
                              '四川': 'sichuan',
                              '贵州': 'guizhou',
                              '云南': 'yunnan',
                              '西藏': 'xizang',
                              '陕西': 'shanxi',
                              '甘肃': 'gansu',
                              '青海': 'qinghai',
                              '宁夏': 'ningxia',
                              '新疆': 'xinjiang'}
        self.brand_item = {'奥迪': 'audi',
                           '阿尔法·罗密欧': 'alfaromeo',
                           '阿斯顿·马丁': 'astonmartin',
                           '爱驰': 'always',
                           'ABT': 'abt',
                           'AC Schnitzer': 'acschnitzer-319',
                           '艾康尼克': 'iconiqmotors',
                           'ALPINA': 'alpina',
                           'APEX': 'apex',
                           'Apollo': 'apollo',
                           'ARCFOX极狐': 'arcfox-289',
                           'Aspark': 'aspark',
                           'Atlis': 'atlis',
                           '宝骏': 'bj',
                           '宝马': 'bmw',
                           '奔驰': 'mercedesbenz',
                           '本田': 'honda',
                           '别克': 'buick',
                           '标致': 'peugeot',
                           '比亚迪': 'bydauto',
                           '保时捷': 'porsche',
                           '宝沃': 'borgward',
                           '奔腾': 'besturn',
                           '比速': 'bisuqiche-263',
                           'BEIJING汽车': 'shenbao',
                           '北汽新能源': 'beiqixinnengyuan',
                           '北汽幻速': 'beiqihuansu',
                           '北汽昌河': 'changheauto',
                           '北汽制造': 'beijingjeep',
                           'BAC': 'bac',
                           '宝腾': 'proton',
                           '北京清行': 'qxev',
                           '比德文汽车': 'byvinauto',
                           '宾尼法利纳': 'pininfarina',
                           '铂驰': 'xingchi',
                           '博郡汽车': 'bordrin',
                           'Bollinger Motors': 'bollingermotors',
                           '北京': 'bjqc',
                           '拜腾': 'byton',
                           '宾利': 'bentley',
                           '布加迪': 'bugatti',
                           '巴博斯': 'barbus',
                           '长安汽车': 'cajc',
                           'Caterham': 'caterham',
                           '长安凯程': 'changanqingxingche-281',
                           '长安欧尚': 'casyc',
                           '乘龙汽车': 'dongfengliuqichenglong',
                           'Cupra': 'cupra',
                           'Czinger': 'czinger',
                           '长安跨越': 'changankuayue-283',
                           '长城': 'greatwall',
                           '成功汽车': 'chenggong',
                           '大众': 'volkswagen',
                           '大乘汽车': 'dorcen',
                           'Dacia': 'dacia',
                           '大发': 'daihatsu-355',
                           '大运汽车': 'dayun',
                           '东风风度': 'dongfengfengdu',
                           '东风风光': 'dongfengfengguang',
                           '东风风神': 'fs',
                           '东风风行': 'fengxingauto',
                           '东风富康': 'dongfengfukang',
                           '东风商用车': 'dongfengshangyongche',
                           '东风小康': 'dongfengxiaokang-205',
                           'Donkervoort': 'donkervoort',
                           '东风': 'dongfeng-27',
                           '东风·瑞泰特': 'dongfengruitaite',
                           '东南': 'southeastautomobile',
                           '道奇': 'dodge',
                           'DS': 'ds',
                           '丰田': 'toyota',
                           '福特': 'ford',
                           '菲亚特': 'fiat',
                           '法拉利': 'ferrari',
                           '飞碟汽车': 'feidie',
                           '枫叶汽车': 'maple',
                           'Fisker': 'fisker-369',
                           '福迪': 'foday',
                           '福汽启腾': 'fujianxinlongmaqichegufenyouxiangongsi',
                           '福田': 'foton',
                           'Faraday Future': 'faradayfuture',
                           '广汽传祺': 'gq',
                           '广汽新能源': 'gacne',
                           '高合HiPhi': 'humanhorizons',
                           '格罗夫': 'grove',
                           'GFG Style': 'gfgstyle',
                           '广汽集团': 'gacgroup',
                           '广汽蔚来': 'hycan',
                           '观致': 'qorosauto',
                           '国金': 'sinogold',
                           '国机智骏': 'guojizhijun',
                           '国能汽车': 'nevs',
                           'GMC': 'gmc-109',
                           '光冈': 'galue',
                           '哈弗': 'hafu-196',
                           '海马': 'hama',
                           '汉腾': 'hanteng',
                           '红旗': 'faw-hongqi',
                           '海格': 'higer',
                           '汉龙汽车': 'hanlong',
                           '恒驰': 'evergrandeneoenergy',
                           '恒天': 'chtc',
                           'Hennessey': 'hennessey',
                           'Hispano Suiza': 'hispanosuiza',
                           '红星汽车': 'redstar',
                           '黄海': 'sgautomotive',
                           '华颂': 'huasong',
                           'Icona': 'icona',
                           'INKAS': 'inkas',
                           '吉利': 'geely',
                           '江淮': 'jac',
                           '捷豹': 'jauger',
                           'Jeep': 'jeep',
                           '捷途': 'jetour',
                           '江铃': 'jmc',
                           '江铃旅居车': 'jianglinglvjuche',
                           '奇点汽车': 'singulato',
                           '捷达': 'jetta',
                           '捷尼赛思': 'genesis-357',
                           '几何汽车': 'geometry',
                           '金杯': 'jinbei',
                           '金龙': 'kinglongmotor',
                           '金旅': 'jlkc',
                           '九龙': 'joylongautomobile',
                           '君马': 'traum',
                           '钧天汽车': 'juntiansuv',
                           '凯迪拉克': 'cadillac',
                           '凯翼': 'kaiyi',
                           '克莱斯勒': 'chrysler',
                           '开瑞': 'karry',
                           '开沃汽车': 'skywell-342',
                           'Karma': 'karma-330',
                           '卡升汽车': 'zhejiangkaersen',
                           '卡威': 'kawei',
                           '科尼赛克': 'koenigsegg',
                           'KTM': 'ktm',
                           '卡尔森': 'kaersen',
                           '雷克萨斯': 'lexus',
                           '雷诺': 'renult',
                           '领克': 'lynkco',
                           '林肯': 'lincoln',
                           '陆风': 'landwind',
                           '路虎': 'landrover',
                           '力帆': 'lifanmotors',
                           '铃木': 'suzuki',
                           '劳斯莱斯': 'rolls-royce',
                           '拉达': 'lada',
                           '兰博基尼': 'lamborghini',
                           '蓝旗亚': 'lancia-392',
                           '岚图汽车': 'voyah',
                           '雷诺三星': 'renaultsamsungmotors',
                           'LEVC': 'levc',
                           '猎豹': 'cf',
                           '凌宝汽车': 'lingbox',
                           '零跑汽车': 'leapmotor',
                           '领途汽车': 'linktour',
                           '理念': 'everus',
                           '理想汽车': 'li',
                           'Lordstown Motors': 'lordstownmotors',
                           'Lorinser': 'lorinser',
                           'Lucid': 'lucid',
                           '路特斯': 'lotus',
                           '雷丁': 'levdeo',
                           '马自达': 'mazda',
                           '名爵': 'mg-79',
                           'MINI': 'mini',
                           'Mahindra': 'mahindra',
                           '迈凯伦': 'mclaren',
                           '迈莎锐': 'mansory',
                           '玛莎拉蒂': 'maserati',
                           'Micro': 'micro',
                           '哪吒汽车': 'hozon',
                           '讴歌': 'acura',
                           '欧拉': 'ora',
                           '欧宝': 'opel',
                           '帕加尼': 'pagani',
                           '佩奇奥': 'pgo-379',
                           'Polestar极星': 'polestar',
                           'Puritalia': 'puritalia',
                           '奇瑞': 'chery',
                           '启辰': 'venucia',
                           '起亚': 'kia',
                           '前途': 'chautotechnology',
                           '乔治·巴顿': 'qiaozhibadun-339',
                           '骐铃汽车': 'jdmc',
                           '庆铃汽车': 'isuzu',
                           '清源汽车': 'qyev',
                           '日产': 'nissan',
                           'Rimac': 'rimac',
                           'RIVIAN': 'rivian',
                           '荣威': 'roewe',
                           'R汽车': 'r',
                           '瑞驰新能源': 'ruichixinnengyuan',
                           '斯柯达': 'skoda',
                           '斯巴鲁': 'subaru',
                           'smart': 'smart',
                           'SWM斯威汽车': 'siwei',
                           '思皓': 'sol',
                           '赛麟': 'saleen',
                           '三菱': 'mitsubishi',
                           '三一集团': 'sany',
                           'SERES赛力斯': 'sfmotors',
                           '上汽大通MAXUS': 'maxus',
                           '上汽红岩': 'shangqihonghyan',
                           '上汽跃进': 'shangqiyuejin',
                           '陕汽商用车': 'shanqishangyongche',
                           '陕汽重卡': 'sanqizhongka',
                           '双龙': 'ssangyong',
                           'SONGSAN MOTORS': 'songsanmotors',
                           'SRM鑫源': 'srm',
                           'SSC': 'ssc',
                           '速达': 'suda-399',
                           '索尼': 'sony',
                           '思铭': 'ciimo',
                           '特斯拉': 'tesla',
                           '腾势': 'denza',
                           '唐骏汽车': 'tking',
                           '塔塔': 'tata',
                           '天际汽车': 'enovate',
                           '天美汽车': 'skywell-394',
                           'Troller': 'troller',
                           'VANTAS': 'vantas',
                           'Vega Innovations': 'vegainnovations',
                           'Vinfast': 'vinfast',
                           '五菱汽车': 'sgmw',
                           '沃尔沃': 'volvo',
                           'WEY': 'wey',
                           '蔚来': 'weilaiqiche',
                           '五十铃': 'isuzu-132',
                           '瓦滋': 'uaz',
                           '潍柴欧睿': 'eurise',
                           '潍柴汽车': 'vgv',
                           '威麟': 'rely',
                           '威马汽车': 'weltmeister',
                           '沃克斯豪尔': 'vauxhall',
                           '雪佛兰': 'chevrolet',
                           '雪铁龙': 'citroen',
                           '现代': 'hyundai',
                           '小鹏汽车': 'xpeng',
                           '新宝骏': 'baojun-359',
                           '星途': 'exeed',
                           '新特汽车': 'sitech',
                           '西雅特': 'seat',
                           '英菲尼迪': 'infiniti',
                           '驭胜': 'yusheng-258',
                           '野马汽车': 'ym',
                           '英致汽车': 'enranger',
                           '银隆新能源': 'yinlong',
                           '一汽': 'faw',
                           '一汽解放': 'yiqijiefang-409',
                           '依维柯': 'iveco',
                           '远程汽车': 'yuanchengqiche',
                           '云度': 'yudo',
                           '云雀汽车': 'yunqueqiche',
                           '宇通客车': 'yutong',
                           '众泰': 'zotyeauto',
                           '中华': 'brillianceauto',
                           'Zenvo': 'zenvo-347',
                           '中国重汽': 'sinotruk',
                           '中兴': 'zxauto'}

    is_debug = True
    custom_debug_settings = {
        'MYSQL_SERVER': "192.168.1.94",
        'MYSQL_USER': "dataUser94",
        'MYSQL_PWD': "94dataUser@2020",
        'MYSQL_PORT': 3306,
        'MYSQL_DB': "network",
        'MYSQL_TABLE': "yiche_dealer",
        'MONGODB_SERVER': '192.168.2.149',
        'MONGODB_PORT': 27017,
        'MONGODB_DB': 'shop_name',
        'MONGODB_COLLECTION': 'yiche_dealer',
        'CONCURRENT_REQUESTS': 8,
        'DOWNLOAD_DELAY': 0,
        'LOG_LEVEL': 'DEBUG',
        # 'DOWNLOAD_TIMEOUT': 5,
        # 'RETRY_ENABLED': False,
        # 'RETRY_TIMES': 1,
        # 'COOKIES_ENABLED': True,
        # 'REDIS_URL': 'redis://192.168.1.241:6379/14',
        # 'DOWNLOADER_MIDDLEWARES': {
        #     'dealer.middlewares.DealerProxyMiddleware': 400,
        #     'dealer.middlewares.DealerUserAgentMiddleware': 100,
        # },
        # 'ITEM_PIPELINES': {
        'dealer.pipelines.DealerPipeline': 300,
        #     'dealer.pipelines.RenameTable': 299
        # },
    }

    def start_requests(self):
        for province in self.province_item.keys():
            province_py = self.province_item[province]
            for brand in self.brand_item.keys():
                brand_py = self.brand_item[brand]
                # print(province, province_py, brand, brand_id)
                url = f'https://dealer.bitauto.com/{province_py}/{brand_py}'
                yield scrapy.Request(url=url, meta={'info': (province, province_py, brand, brand_py)})

    def parse(self, response):
        province, province_py, brand, brand_py = response.meta.get('info')
        divs = response.xpath('//div[@class="row dealer-list"]')
        for div in divs:
            shoptype = div.xpath('.//h6[@class="title-4s"]/a/em/text()').extract_first()
            shopname = div.xpath('.//h6[@class="title-4s"]/a/text()').extract_first()
            shop_url = div.xpath('.//h6[@class="title-4s"]/a/@href').extract_first()
            yield scrapy.Request(url=response.urljoin(shop_url), callback=self.shop_parse,
                                 meta={'info': (province, province_py, brand, brand_py, shoptype, shopname)})

        next_url = response.xpath('//a[@class="next_on"]/@href').extract_first()
        if next_url:
            yield scrapy.Request(url=response.urljoin(next_url), callback=self.parse,
                                 meta={'info': (province, province_py, brand, brand_py)})

    def shop_parse(self, response):
        item = {}
        province, province_py, brand, brand_py, shoptype, shopname = response.meta.get('info')
        mainbrand = response.xpath('//div[@class="carmore"]/text()').extract_first()
        try:
            tel1 = re.findall(r'【电话：(.*?)】', response.text)[0]
        except:
            tel1 = None
        tel2 = response.xpath('//em[@class="imp 400Tel card400"]/@data-tel').extract_first()
        location = response.xpath('//div[@class="ads"]/@title').extract_first()
        salesregions = response.xpath('//i[@class="sales"]/text()').extract_first()
        item['grantime'] = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
        item['province'] = province
        item['brand'] = brand
        item['shopname'] = shopname
        item['shoptype'] = shoptype
        item['mainbrand'] = mainbrand
        item['tel1'] = tel1
        item['tel2'] = tel2
        item['location'] = location
        item['salesregions'] = salesregions
        item['url'] = response.url
        item['status'] = province + brand + shopname + location
        yield item
